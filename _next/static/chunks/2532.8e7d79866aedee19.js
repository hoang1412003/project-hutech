"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2532],{32252:function(t,e,n){n.d(e,{g:function(){return a},i:function(){return s}});var i=n(22555);function s(t){let e=new URL(t).hostname;return e.endsWith(".thirdweb.com")||"localhost"===e||"0.0.0.0"===e}function a(t){return(0,i.OZ$)(t).map(t=>{try{let e=new URL(t);return e.hostname.endsWith(".thirdweb.com")&&(e.pathname="",e.search=""),e.toString()}catch(e){return t}})}},12532:function(t,e,n){n.r(e),n.d(e,{CoinbaseWalletConnector:function(){return C}});var i=n(71958),s=n(16074),a=n(42009),h=n(83287),r=n(89432),c=n(19485),o=n(241),d=n(16441),l=n(64829),u=n(32252),w=n(59014);n(54146);var g=new WeakMap,m=new WeakMap,p=new WeakSet;class C extends h.W{constructor(t){let{chains:e,options:n}=t;super({chains:e,options:{reloadOnDisconnect:!1,...n}}),(0,i._)(this,p),(0,a._)(this,"id",l.w.coinbase),(0,a._)(this,"name","Coinbase Wallet"),(0,a._)(this,"ready",!0),(0,s._)(this,g,{writable:!0,value:void 0}),(0,s._)(this,m,{writable:!0,value:void 0}),(0,a._)(this,"onAccountsChanged",t=>{0===t.length?this.emit("disconnect"):this.emit("change",{account:c.getAddress(t[0])})}),(0,a._)(this,"onChainChanged",t=>{let e=(0,w.n)(t),n=this.isChainUnsupported(e);this.emit("change",{chain:{id:e,unsupported:n}})}),(0,a._)(this,"onDisconnect",()=>{this.emit("disconnect")})}async connect(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let e=await this.getProvider();this.setupListeners(),this.emit("message",{type:"connecting"});let n=await e.enable(),i=c.getAddress(n[0]),s=await this.getChainId(),a=this.isChainUnsupported(s);if(t&&s!==t)try{let e=await this.switchChain(t);s=e.chainId,a=this.isChainUnsupported(s)}catch(e){console.error(`Connected but failed to switch to desired chain ${t}`,e)}return{account:i,chain:{id:s,unsupported:a},provider:new o.Q(e)}}catch(t){if(/(user closed modal|accounts received is empty)/i.test(t.message))throw new r.U(t);throw t}}async disconnect(){if(!(0,s.b)(this,m))return;let t=await this.getProvider();t.removeListener("accountsChanged",this.onAccountsChanged),t.removeListener("chainChanged",this.onChainChanged),t.removeListener("disconnect",this.onDisconnect),t.disconnect(),t.close()}async getAccount(){let t=await this.getProvider(),e=await t.request({method:"eth_accounts"});if(0===e.length)throw Error("No accounts found");return c.getAddress(e[0])}async getChainId(){let t=await this.getProvider(),e=(0,w.n)(t.chainId);return e}async getProvider(){if(!(0,s.b)(this,m)){let t=(await Promise.all([n.e(9863),n.e(5811),n.e(6942)]).then(n.bind(n,45811))).default;"function"!=typeof t&&"function"==typeof t.default&&(t=t.default),(0,s.a)(this,g,new t(this.options));let e=s.b(this,g).walletExtension?.getChainId(),i=this.chains.find(t=>this.options.chainId?t.chainId===this.options.chainId:t.chainId===e)||this.chains[0],a=this.options.chainId||i?.chainId,h=this.options.jsonRpcUrl||i?.rpc[0];(0,s.a)(this,m,(0,s.b)(this,g).makeWeb3Provider(h,a))}return(0,s.b)(this,m)}async getSigner(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},[e,n]=await Promise.all([this.getProvider(),this.getAccount()]);return new o.Q(e,t).getSigner(n)}async isAuthorized(){try{let t=await this.getAccount();return!!t}catch{return!1}}async switchChain(t){let e=await this.getProvider(),n=d.hexValue(t);try{return await e.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]}),this.chains.find(e=>e.chainId===t)??{chainId:t,name:`Chain ${n}`,slug:`${n}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],testnet:!1,chain:"ethereum",shortName:"eth"}}catch(a){let s=this.chains.find(e=>e.chainId===t);if(!s)throw new r.C({chainId:t,connectorId:this.id});if(4902===a.code)try{return await e.request({method:"wallet_addEthereumChain",params:[{chainId:n,chainName:s.name,nativeCurrency:s.nativeCurrency,rpcUrls:(0,u.g)(s),blockExplorerUrls:this.getBlockExplorerUrls(s)}]}),s}catch(t){if((0,i.a)(this,p,f).call(this,t))throw new r.U(t);throw new r.A}if((0,i.a)(this,p,f).call(this,a))throw new r.U(a);throw new r.S(a)}}async setupListeners(){let t=await this.getProvider();t.on("accountsChanged",this.onAccountsChanged),t.on("chainChanged",this.onChainChanged),t.on("disconnect",this.onDisconnect)}async getQrUrl(){if(await this.getProvider(),!(0,s.b)(this,g))throw Error("Coinbase Wallet SDK not initialized");return(0,s.b)(this,g).getQrUrl()}}function f(t){return/(user rejected)/i.test(t.message)}}}]);