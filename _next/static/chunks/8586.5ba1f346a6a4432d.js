"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8586,5664],{32252:function(t,e,i){i.d(e,{g:function(){return r},i:function(){return s}});var n=i(22555);function s(t){let e=new URL(t).hostname;return e.endsWith(".thirdweb.com")||"localhost"===e||"0.0.0.0"===e}function r(t){return(0,n.OZ$)(t).map(t=>{try{let e=new URL(t);return e.hostname.endsWith(".thirdweb.com")&&(e.pathname="",e.search=""),e.toString()}catch(e){return t}})}},95664:function(t,e,i){i.r(e),i.d(e,{InjectedConnector:function(){return m}});var n=i(42009),s=i(16074),r=i(83287),a=i(89432),o=i(24528),c=i(32252),h=i(19485),d=i(241),l=i(16441),u=i(59014);i(54146);var w=new WeakMap;class m extends r.W{constructor(t){let e={shimDisconnect:!0,getProvider:()=>{if((0,o.a)(globalThis.window))return globalThis.window.ethereum},...t.options};super({chains:t.chains,options:e}),(0,s._)(this,w,{writable:!0,value:void 0}),(0,n._)(this,"shimDisconnectKey","injected.shimDisconnect"),(0,n._)(this,"onAccountsChanged",async t=>{0===t.length?this.emit("disconnect"):this.emit("change",{account:h.getAddress(t[0])})}),(0,n._)(this,"onChainChanged",t=>{let e=(0,u.n)(t),i=this.isChainUnsupported(e);this.emit("change",{chain:{id:e,unsupported:i}})}),(0,n._)(this,"onDisconnect",async t=>{if(1013===t.code){let t=await this.getProvider();if(t)try{let t=await this.getAccount();if(t)return}catch{}}this.emit("disconnect"),this.options.shimDisconnect&&await this.connectorStorage.removeItem(this.shimDisconnectKey)});let i=e.getProvider();if("string"==typeof e.name)this.name=e.name;else if(i){let t=function(t){if(!t)return"Injected";let e=t=>t.isAvalanche?"Core Wallet":t.isBitKeep?"BitKeep":t.isBraveWallet?"Brave Wallet":t.isCoinbaseWallet?"Coinbase Wallet":t.isExodus?"Exodus":t.isFrame?"Frame":t.isKuCoinWallet?"KuCoin Wallet":t.isMathWallet?"MathWallet":t.isOneInchIOSWallet||t.isOneInchAndroidWallet?"1inch Wallet":t.isOpera?"Opera":t.isPortal?"Ripio Portal":t.isTally?"Tally":t.isTokenPocket?"TokenPocket":t.isTokenary?"Tokenary":t.isTrust||t.isTrustWallet?"Trust Wallet":t.isMetaMask?"MetaMask":void 0;if(t.providers?.length){let i=new Set,n=1;for(let s of t.providers){let t=e(s);t||(t=`Unknown Wallet #${n}`,n+=1),i.add(t)}let s=[...i];return s.length?s:s[0]??"Injected"}return e(t)??"Injected"}(i);e.name?this.name=e.name(t):"string"==typeof t?this.name=t:this.name=t[0]}else this.name="Injected";this.id="injected",this.ready=!!i,this.connectorStorage=t.connectorStorage}async connect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let e=await this.getProvider();if(!e)throw new a.a;this.setupListeners(),this.emit("message",{type:"connecting"});let i=await e.request({method:"eth_requestAccounts"}),n=h.getAddress(i[0]),s=await this.getChainId(),r=this.isChainUnsupported(s);if(t.chainId&&s!==t.chainId)try{await this.switchChain(t.chainId),s=t.chainId,r=this.isChainUnsupported(t.chainId)}catch(e){console.error(`Could not switch to chain id: ${t.chainId}`,e)}this.options.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");let o={account:n,chain:{id:s,unsupported:r},provider:e};return this.emit("connect",o),o}catch(t){if(this.isUserRejectedRequestError(t))throw new a.U(t);if(-32002===t.code)throw new a.R(t);throw t}}async disconnect(){let t=await this.getProvider();t?.removeListener&&(t.removeListener("accountsChanged",this.onAccountsChanged),t.removeListener("chainChanged",this.onChainChanged),t.removeListener("disconnect",this.onDisconnect),this.options.shimDisconnect&&await this.connectorStorage.removeItem(this.shimDisconnectKey))}async getAccount(){let t=await this.getProvider();if(!t)throw new a.a;let e=await t.request({method:"eth_accounts"});return h.getAddress(e[0])}async getChainId(){let t=await this.getProvider();if(!t)throw new a.a;return t.request({method:"eth_chainId"}).then(u.n)}async getProvider(){let t=this.options.getProvider();return t&&(0,s.a)(this,w,t),(0,s.b)(this,w)}async getSigner(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},[e,i]=await Promise.all([this.getProvider(),this.getAccount()]);return new d.Q(e,t).getSigner(i)}async isAuthorized(){try{if(this.options.shimDisconnect&&!await this.connectorStorage.getItem(this.shimDisconnectKey))return!1;let t=await this.getProvider();if(!t)throw new a.a;let e=await this.getAccount();return!!e}catch{return!1}}async switchChain(t){let e=await this.getProvider();if(!e)throw new a.a;let i=l.hexValue(t);try{await e.request({method:"wallet_switchEthereumChain",params:[{chainId:i}]});let n=this.chains.find(e=>e.chainId===t);if(n)return n;return{chainId:t,name:`Chain ${i}`,slug:`${i}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],chain:"",shortName:"",testnet:!0}}catch(s){let n=this.chains.find(e=>e.chainId===t);if(!n)throw new a.C({chainId:t,connectorId:this.id});if(4902===s.code||s?.data?.originalError?.code===4902)try{return await e.request({method:"wallet_addEthereumChain",params:[{chainId:i,chainName:n.name,nativeCurrency:n.nativeCurrency,rpcUrls:(0,c.g)(n),blockExplorerUrls:this.getBlockExplorerUrls(n)}]}),n}catch(t){if(this.isUserRejectedRequestError(t))throw new a.U(s);throw new a.A}if(this.isUserRejectedRequestError(s))throw new a.U(s);throw new a.S(s)}}async setupListeners(){let t=await this.getProvider();t.on&&(t.on("accountsChanged",this.onAccountsChanged),t.on("chainChanged",this.onChainChanged),t.on("disconnect",this.onDisconnect))}isUserRejectedRequestError(t){return 4001===t.code}}},48586:function(t,e,i){i.r(e),i.d(e,{OKXConnector:function(){return h}});var n=i(42009),s=i(89432),r=i(64829),a=i(95664),o=i(19485),c=i(98294);i(54146);class h extends a.InjectedConnector{constructor(t){let e={name:"OKX",shimDisconnect:!0,shimChainChangedDisconnect:!0,getProvider:c.g},i={...e,...t.options};super({chains:t.chains,options:i,connectorStorage:t.connectorStorage}),(0,n._)(this,"id",r.w.okx)}async connect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let e=await this.getProvider();if(!e)throw new s.a;this.setupListeners(),this.emit("message",{type:"connecting"});let i=null;if(this.options?.shimDisconnect&&!this.connectorStorage.getItem(this.shimDisconnectKey)){i=await this.getAccount().catch(()=>null);let t=!!i;if(t)try{await e.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}catch(t){if(this.isUserRejectedRequestError(t))throw new s.U(t)}}if(!i){let t=await e.request({method:"eth_requestAccounts"});i=o.getAddress(t[0])}let n=await this.getChainId(),r=this.isChainUnsupported(n);if(t.chainId&&n!==t.chainId)try{await this.switchChain(t.chainId),n=t.chainId,r=this.isChainUnsupported(t.chainId)}catch(e){console.error(`Could not switch to chain id : ${t.chainId}`,e)}this.options?.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");let a={chain:{id:n,unsupported:r},provider:e,account:i};return this.emit("connect",a),a}catch(t){if(this.isUserRejectedRequestError(t))throw new s.U(t);if(-32002===t.code)throw new s.R(t);throw t}}async switchAccount(){let t=await this.getProvider();await t.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}}}}]);