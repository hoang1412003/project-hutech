(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5163],{76237:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BaseAccountAPI=void 0;let a=s(86623),n=s(51364),r=s(56371),i=s(16236),o=s(2151);t.BaseAccountAPI=class{constructor(e){this.isPhantom=!0,this.provider=e.provider,this.overheads=e.overheads,this.entryPointAddress=e.entryPointAddress,this.accountAddress=e.accountAddress,this.paymasterAPI=e.paymasterAPI,this.entryPointView=n.EntryPoint__factory.connect(e.entryPointAddress,e.provider).connect(a.ethers.constants.AddressZero)}async init(){if(await this.provider.getCode(this.entryPointAddress)==="0x")throw Error(`entryPoint not deployed at ${this.entryPointAddress}`);return await this.getAccountAddress(),this}async checkAccountPhantom(){if(!this.isPhantom)return this.isPhantom;let e=await this.provider.getCode(this.getAccountAddress());return e.length>2&&(this.isPhantom=!1),this.isPhantom}async getCounterFactualAddress(){let e=this.getAccountInitCode();try{await this.entryPointView.callStatic.getSenderAddress(e)}catch(e){return e.errorArgs.sender}throw Error("must handle revert")}async getInitCode(){return await this.checkAccountPhantom()?await this.getAccountInitCode():"0x"}async getVerificationGasLimit(){return 1e5}async getPreVerificationGas(e){let t=await (0,r.resolveProperties)(e);return(0,o.calcPreVerificationGas)(t,this.overheads)}packUserOp(e){return(0,i.packUserOp)(e,!1)}async encodeUserOpCallDataAndGasLimit(e){var t,s;function n(e){return null==e||""===e?null:a.BigNumber.from(e.toString())}let r=null!==(t=n(e.value))&&void 0!==t?t:a.BigNumber.from(0),i=await this.encodeExecute(e.target,r,e.data),o=null!==(s=n(e.gasLimit))&&void 0!==s?s:await this.provider.estimateGas({from:this.entryPointAddress,to:this.getAccountAddress(),data:i});return{callData:i,callGasLimit:o}}async getUserOpHash(e){let t=await (0,r.resolveProperties)(e),s=await this.provider.getNetwork().then(e=>e.chainId);return(0,i.getUserOpHash)(t,this.entryPointAddress,s)}async getAccountAddress(){return null==this.senderAddress&&(null!=this.accountAddress?this.senderAddress=this.accountAddress:this.senderAddress=await this.getCounterFactualAddress()),this.senderAddress}async estimateCreationGas(e){if(null==e||"0x"===e)return 0;let t=e.substring(0,42),s="0x"+e.substring(42);return await this.provider.estimateGas({to:t,data:s})}async createUnsignedUserOp(e){var t,s;let n;let{callData:r,callGasLimit:i}=await this.encodeUserOpCallDataAndGasLimit(e),o=await this.getInitCode(),l=await this.estimateCreationGas(o),d=a.BigNumber.from(await this.getVerificationGasLimit()).add(l),{maxFeePerGas:c,maxPriorityFeePerGas:m}=e;if(null==c||null==m){let e=await this.provider.getFeeData();null==c&&(c=null!==(t=e.maxFeePerGas)&&void 0!==t?t:void 0),null==m&&(m=null!==(s=e.maxPriorityFeePerGas)&&void 0!==s?s:void 0)}let u={sender:this.getAccountAddress(),nonce:this.getNonce(),initCode:o,callData:r,callGasLimit:i,verificationGasLimit:d,maxFeePerGas:c,maxPriorityFeePerGas:m,paymasterAndData:"0x"};if(null!=this.paymasterAPI){let e=Object.assign(Object.assign({},u),{preVerificationGas:await this.getPreVerificationGas(u)});n=await this.paymasterAPI.getPaymasterAndData(e)}return u.paymasterAndData=null!=n?n:"0x",Object.assign(Object.assign({},u),{preVerificationGas:this.getPreVerificationGas(u),signature:""})}async signUserOp(e){let t=await this.getUserOpHash(e),s=this.signUserOpHash(t);return Object.assign(Object.assign({},e),{signature:s})}async createSignedUserOp(e){return await this.signUserOp(await this.createUnsignedUserOp(e))}async getUserOpReceipt(e,t=3e4,s=5e3){let a=Date.now()+t;for(;Date.now()<a;){let t=await this.entryPointView.queryFilter(this.entryPointView.filters.UserOperationEvent(e));if(t.length>0)return t[0].transactionHash;await new Promise(e=>setTimeout(e,s))}return null}}},40975:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DeterministicDeployer=void 0;let a=s(86623),n=s(56371);class r{static getAddress(e,t=0,s=[]){return r.getDeterministicDeployAddress(e,t,s)}static async deploy(e,t=0,s=[]){return await r.instance.deterministicDeploy(e,t,s)}constructor(e){this.provider=e}async isContractDeployed(e){return await this.provider.getCode(e).then(e=>e.length>2)}async isDeployerDeployed(){return await this.isContractDeployed(r.proxyAddress)}async deployFactory(){if(await this.isContractDeployed(r.proxyAddress))return;let e=await this.provider.getBalance(r.deploymentSignerAddress),t=a.BigNumber.from(r.deploymentGasLimit).mul(r.deploymentGasPrice),s=this.provider.getSigner();if(e.lt(t)&&await s.sendTransaction({to:r.deploymentSignerAddress,value:t,gasLimit:r.deploymentGasLimit}),await this.provider.send("eth_sendRawTransaction",[r.deploymentTransaction]),!await this.isContractDeployed(r.proxyAddress))throw Error("raw TX didn't deploy deployer!")}async getDeployTransaction(e,t=0,s=[]){await this.deployFactory();let a=(0,n.hexZeroPad)((0,n.hexlify)(t),32),i=r.getCtrCode(e,s);return{to:r.proxyAddress,data:(0,n.hexConcat)([a,i])}}static getCtrCode(e,t){if("string"!=typeof e)return(0,n.hexlify)(e.getDeployTransaction(...t).data);if(0!==t.length)throw Error("constructor params can only be passed to ContractFactory");return e}static getDeterministicDeployAddress(e,t=0,s=[]){let a=(0,n.hexZeroPad)((0,n.hexlify)(t),32),i=r.getCtrCode(e,s);return"0x"+(0,n.keccak256)((0,n.hexConcat)(["0xff",r.proxyAddress,a,(0,n.keccak256)(i)])).slice(-40)}async deterministicDeploy(e,t=0,s=[]){let a=r.getDeterministicDeployAddress(e,t,s);return await this.isContractDeployed(a)||await this.provider.getSigner().sendTransaction(await this.getDeployTransaction(e,t,s)),a}static init(e){this._instance=new r(e)}static get instance(){if(null==this._instance)throw Error('must call "DeterministicDeployer.init(ethers.provider)" first');return this._instance}}t.DeterministicDeployer=r,r.proxyAddress="0x4e59b44847b379578588920ca78fbf26c0b4956c",r.deploymentTransaction="0xf8a58085174876e800830186a08080b853604580600e600039806000f350fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe03601600081602082378035828234f58015156039578182fd5b8082525050506014600cf31ba02222222222222222222222222222222222222222222222222222222222222222a02222222222222222222222222222222222222222222222222222222222222222",r.deploymentSignerAddress="0x3fab184622dc19b6109349b94811493bf2a45362",r.deploymentGasPrice=1e11,r.deploymentGasLimit=1e5},89350:function(e,t,s){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ERC4337EthersProvider=void 0;let n=s(27349),r=s(86623),i=s(56371),o=s(39105),l=s(73262),d=s(16236),c=a(s(11227)),m=(0,c.default)("aa.provider");class u extends n.BaseProvider{constructor(e,t,s,a,n,r,i){super({name:"ERC-4337 Custom Network",chainId:e}),this.chainId=e,this.config=t,this.originalSigner=s,this.originalProvider=a,this.httpRpcClient=n,this.entryPoint=r,this.smartAccountAPI=i,this.signer=new o.ERC4337EthersSigner(t,s,this,n,i)}async init(){return this.initializedBlockNumber=await this.originalProvider.getBlockNumber(),await this.smartAccountAPI.init(),this}getSigner(){return this.signer}async perform(e,t){if(m("perform",e,t),"sendTransaction"===e||"getTransactionReceipt"===e)throw Error("Should not get here. Investigate.");return await this.originalProvider.perform(e,t)}async getTransaction(e){return await super.getTransaction(e)}async getTransactionReceipt(e){let t=await e,s=await this.getSenderAccountAddress();return await new Promise((e,a)=>{new l.UserOperationEventListener(e,a,this.entryPoint,s,t).start()})}async getSenderAccountAddress(){return await this.smartAccountAPI.getAccountAddress()}async waitForTransaction(e,t,s){let a=await this.getSenderAccountAddress();return await new Promise((t,n)=>{let r=new l.UserOperationEventListener(t,n,this.entryPoint,a,e,void 0,s);r.start()})}async constructUserOpTransactionResponse(e){let t=await (0,i.resolveProperties)(e),s=(0,d.getUserOpHash)(t,this.config.entryPointAddress,this.chainId),a=new Promise((e,a)=>{new l.UserOperationEventListener(e,a,this.entryPoint,t.sender,s,t.nonce).start()});return{hash:s,confirmations:0,from:t.sender,nonce:r.BigNumber.from(t.nonce).toNumber(),gasLimit:r.BigNumber.from(t.callGasLimit),value:r.BigNumber.from(0),data:(0,i.hexValue)(t.callData),chainId:this.chainId,wait:async e=>{let s=await a;return 0!==t.initCode.length&&await this.smartAccountAPI.checkAccountPhantom(),s}}}async detectNetwork(){return this.originalProvider.detectNetwork()}}t.ERC4337EthersProvider=u},39105:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ERC4337EthersSigner=void 0;let a=s(6881),n=s(48088);class r extends n.Signer{constructor(e,t,s,n,r){super(),this.config=e,this.originalSigner=t,this.erc4337provider=s,this.httpRpcClient=n,this.smartAccountAPI=r,(0,a.defineReadOnly)(this,"provider",s)}async sendTransaction(e){var t,s,a;let n=await this.populateTransaction(e);await this.verifyAllNecessaryFields(n);let r=await this.smartAccountAPI.createSignedUserOp({target:null!==(t=n.to)&&void 0!==t?t:"",data:null!==(a=null===(s=n.data)||void 0===s?void 0:s.toString())&&void 0!==a?a:"",value:n.value,gasLimit:n.gasLimit}),i=await this.erc4337provider.constructUserOpTransactionResponse(r);try{await this.httpRpcClient.sendUserOpToBundler(r)}catch(e){throw this.unwrapError(e)}return i}unwrapError(e){var t;if(null!=e.body){let s=JSON.parse(e.body),a="",n=null===(t=null==s?void 0:s.error)||void 0===t?void 0:t.message;if((null==n?void 0:n.includes("FailedOp"))===!0){let e=n.match(/FailedOp\((.*)\)/);if(null!=e){let t=e[1].split(",");a=`(paymaster address: ${t[1]})`,n=t[2]}}let r=Error(`The bundler has failed to include UserOperation in a batch: ${n} ${a})`);return r.stack=e.stack,r}return e}async verifyAllNecessaryFields(e){if(null==e.to)throw Error("Missing call target");if(null==e.data&&null==e.value)throw Error("Missing call data or value")}connect(e){throw Error("changing providers is not supported")}async getAddress(){return null==this.address&&(this.address=await this.erc4337provider.getSenderAccountAddress()),this.address}async signMessage(e){return await this.originalSigner.signMessage(e)}async signTransaction(e){throw Error("not implemented")}async signUserOperation(e){let t=await this.smartAccountAPI.getUserOpHash(e);return await this.originalSigner.signMessage(t)}}t.ERC4337EthersSigner=r},41195:function(e,t,s){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.HttpRpcClient=void 0;let n=s(86623),r=s(56371),i=a(s(11227)),o=s(16236),l=(0,i.default)("aa.rpc");t.HttpRpcClient=class{constructor(e,t,s){this.bundlerUrl=e,this.entryPointAddress=t,this.chainId=s,this.userOpJsonRpcProvider=new n.ethers.providers.JsonRpcProvider(this.bundlerUrl,{name:"Connected bundler network",chainId:s}),this.initializing=this.validateChainId()}async validateChainId(){let e=await this.userOpJsonRpcProvider.send("eth_chainId",[]),t=parseInt(e);if(t!==this.chainId)throw Error(`bundler ${this.bundlerUrl} is on chainId ${t}, but provider is on chainId ${this.chainId}`)}async sendUserOpToBundler(e){await this.initializing;let t=(0,o.deepHexlify)(await (0,r.resolveProperties)(e)),s=[t,this.entryPointAddress];return await this.printUserOperation("eth_sendUserOperation",s),await this.userOpJsonRpcProvider.send("eth_sendUserOperation",[t,this.entryPointAddress])}async estimateUserOpGas(e){await this.initializing;let t=(0,o.deepHexlify)(await (0,r.resolveProperties)(e)),s=[t,this.entryPointAddress];return await this.printUserOperation("eth_estimateUserOperationGas",s),await this.userOpJsonRpcProvider.send("eth_estimateUserOperationGas",[t,this.entryPointAddress])}async printUserOperation(e,[t,s]){let a=await (0,r.resolveProperties)(t);l("sending",e,Object.assign({},a),s)}}},17453:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PaymasterAPI=void 0,t.PaymasterAPI=class{async getPaymasterAndData(e){return"0x"}}},8727:function(e,t,s){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.wrapProvider=void 0;let n=s(51364),r=s(71552),i=s(89350),o=s(41195),l=s(40975),d=a(s(11227)),c=(0,d.default)("aa.wrapProvider");async function m(e,t,s=e.getSigner()){let a=n.EntryPoint__factory.connect(t.entryPointAddress,e),d=new l.DeterministicDeployer(e),m=await d.deterministicDeploy(new n.SimpleAccountFactory__factory,0,[a.address]),u=new r.SimpleAccountAPI({provider:e,entryPointAddress:a.address,owner:s,factoryAddress:m,paymasterAPI:t.paymasterAPI});c("config=",t);let w=await e.getNetwork().then(e=>e.chainId),p=new o.HttpRpcClient(t.bundlerUrl,t.entryPointAddress,w);return await new i.ERC4337EthersProvider(w,t,s,e,p,a,u).init()}t.wrapProvider=m},71552:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SimpleAccountAPI=void 0;let a=s(86623),n=s(51364),r=s(56371),i=s(76237);class o extends i.BaseAccountAPI{constructor(e){var t;super(e),this.factoryAddress=e.factoryAddress,this.owner=e.owner,this.index=null!==(t=e.index)&&void 0!==t?t:0}async _getAccountContract(){return null==this.accountContract&&(this.accountContract=n.SimpleAccount__factory.connect(await this.getAccountAddress(),this.provider)),this.accountContract}async getAccountInitCode(){if(null==this.factory){if(null!=this.factoryAddress&&""!==this.factoryAddress)this.factory=n.SimpleAccountFactory__factory.connect(this.factoryAddress,this.provider);else throw Error("no factory to get initCode")}return(0,r.hexConcat)([this.factory.address,this.factory.interface.encodeFunctionData("createAccount",[await this.owner.getAddress(),this.index])])}async getNonce(){if(await this.checkAccountPhantom())return a.BigNumber.from(0);let e=await this._getAccountContract();return await e.nonce()}async encodeExecute(e,t,s){let a=await this._getAccountContract();return a.interface.encodeFunctionData("execute",[e,t,s])}async signUserOpHash(e){return await this.owner.signMessage((0,r.arrayify)(e))}}t.SimpleAccountAPI=o},73262:function(e,t,s){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UserOperationEventListener=void 0;let n=s(56371),r=a(s(11227)),i=(0,r.default)("aa.listener");t.UserOperationEventListener=class{constructor(e,t,s,a,n,r,i){var o;this.resolve=e,this.reject=t,this.entryPoint=s,this.sender=a,this.userOpHash=n,this.nonce=r,this.timeout=i,this.resolved=!1,this.boundLisener=this.listenerCallback.bind(this),setTimeout(()=>{this.stop(),this.reject(Error("Timed out"))},null!==(o=this.timeout)&&void 0!==o?o:1e4)}start(){let e=this.entryPoint.filters.UserOperationEvent(this.userOpHash);setTimeout(async()=>{let t=await this.entryPoint.queryFilter(e,"latest");t.length>0?this.listenerCallback(t[0]):this.entryPoint.once(e,this.boundLisener)},100)}stop(){this.entryPoint.off("UserOperationEvent",this.boundLisener)}async listenerCallback(...e){var t;let s=arguments[arguments.length-1];if(null==s.args){console.error("got event without args",s);return}if(s.args.userOpHash!==this.userOpHash){console.log(`== event with wrong userOpHash: sender/nonce: event.${s.args.sender}@${s.args.nonce.toString()}!= userOp.${this.sender}@${parseInt(null===(t=this.nonce)||void 0===t?void 0:t.toString())}`);return}let a=await s.getTransactionReceipt();a.transactionHash=this.userOpHash,i("got event with status=",s.args.success,"gasUsed=",a.gasUsed),s.args.success||await this.extractFailureReason(a),this.stop(),this.resolve(a),this.resolved=!0}async extractFailureReason(e){i("mark tx as failed"),e.status=0;let t=await this.entryPoint.queryFilter(this.entryPoint.filters.UserOperationRevertReason(this.userOpHash,this.sender),e.blockHash);if(null!=t[0]){let e=t[0].args.revertReason;e.startsWith("0x08c379a0")&&(e=n.defaultAbiCoder.decode(["string"],"0x"+e.substring(10)).toString()),i(`rejecting with reason: ${e}`),this.reject(Error(`UserOp failed with reason: ${e}`))}}}},2151:function(e,t,s){"use strict";var a=s(48764).Buffer;Object.defineProperty(t,"__esModule",{value:!0}),t.calcPreVerificationGas=t.DefaultGasOverheads=void 0;let n=s(16236),r=s(56371);t.DefaultGasOverheads={fixed:21e3,perUserOp:18300,perUserOpWord:4,zeroByte:4,nonZeroByte:16,bundleSize:1,sigSize:65},t.calcPreVerificationGas=function(e,s){let i=Object.assign(Object.assign({},t.DefaultGasOverheads),null!=s?s:{}),o=Object.assign({preVerificationGas:21e3,signature:(0,r.hexlify)(a.alloc(i.sigSize,1))},e),l=(0,r.arrayify)((0,n.packUserOp)(o,!1)),d=(l.length+31)/32,c=l.map(e=>0===e?i.zeroByte:i.nonZeroByte).reduce((e,t)=>e+t),m=Math.round(c+i.fixed/i.bundleSize+i.perUserOp+i.perUserOpWord*d);return m}},74064:function(e,t,s){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){void 0===a&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);(!n||("get"in n?!t.__esModule:n.writable||n.configurable))&&(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){void 0===a&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(t,"__esModule",{value:!0}),t.DeterministicDeployer=t.HttpRpcClient=t.ERC4337EthersProvider=t.ERC4337EthersSigner=t.wrapProvider=t.PaymasterAPI=t.SimpleAccountAPI=void 0;var r=s(71552);Object.defineProperty(t,"SimpleAccountAPI",{enumerable:!0,get:function(){return r.SimpleAccountAPI}});var i=s(17453);Object.defineProperty(t,"PaymasterAPI",{enumerable:!0,get:function(){return i.PaymasterAPI}});var o=s(8727);Object.defineProperty(t,"wrapProvider",{enumerable:!0,get:function(){return o.wrapProvider}});var l=s(39105);Object.defineProperty(t,"ERC4337EthersSigner",{enumerable:!0,get:function(){return l.ERC4337EthersSigner}});var d=s(89350);Object.defineProperty(t,"ERC4337EthersProvider",{enumerable:!0,get:function(){return d.ERC4337EthersProvider}});var c=s(41195);Object.defineProperty(t,"HttpRpcClient",{enumerable:!0,get:function(){return c.HttpRpcClient}});var m=s(40975);Object.defineProperty(t,"DeterministicDeployer",{enumerable:!0,get:function(){return m.DeterministicDeployer}}),n(s(2151),t)},93465:function(e,t,s){"use strict";var a,n=s(48764).Buffer,r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.resolveHexlify=t.deepHexlify=t.rethrowError=t.decodeErrorReason=t.getUserOpHash=t.packUserOp=t.AddressZero=void 0;let i=s(56371),o=s(79154),l=s(86623),d=r(s(11227)),c=(0,d.default)("aa.utils"),m="simulateValidation",u=null===(a=o.abi.find(e=>e.name===m))||void 0===a?void 0:a.inputs[0];if(null==u)throw Error(`unable to find method ${m} in EP ${o.abi.filter(e=>"function"===e.type).map(e=>e.name).join(",")}`);function w(e,t=!0){if(t){let t=i.defaultAbiCoder.encode([{components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes",name:"initCode"},{type:"bytes",name:"callData"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes",name:"paymasterAndData"},{type:"bytes",name:"signature"}],name:"userOp",type:"tuple"}],[Object.assign(Object.assign({},e),{signature:"0x"})]);return"0x"+t.slice(66,t.length-64)}let s=u.components.map(t=>({type:t.type,val:e[t.name]}));return function(e,t){let s=e.map(e=>"bytes"===e.type&&t?"bytes32":e.type),a=e.map(e=>"bytes"===e.type&&t?(0,i.keccak256)(e.val):e.val);return i.defaultAbiCoder.encode(s,a)}(s,t)}t.AddressZero=l.ethers.constants.AddressZero,t.packUserOp=w,t.getUserOpHash=function(e,t,s){let a=(0,i.keccak256)(w(e,!0)),n=i.defaultAbiCoder.encode(["bytes32","address","uint256"],[a,t,s]);return(0,i.keccak256)(n)};let p=(0,i.keccak256)(n.from("Error(string)")).slice(0,10),h=(0,i.keccak256)(n.from("FailedOp(uint256,string)")).slice(0,10);function y(e){if(c("decoding",e),e.startsWith(p)){let[t]=i.defaultAbiCoder.decode(["string"],"0x"+e.substring(10));return{message:t}}if(e.startsWith(h)){let[t,s]=i.defaultAbiCoder.decode(["uint256","string"],"0x"+e.substring(10));return{message:s=`FailedOp: ${s}`,opIndex:t}}}function v(e){return"function"==typeof e?void 0:null==e||"string"==typeof e||"boolean"==typeof e?e:null!=e._isBigNumber||"object"!=typeof e?(0,i.hexlify)(e).replace(/^0x0/,"0x"):Array.isArray(e)?e.map(e=>v(e)):Object.keys(e).reduce((t,s)=>Object.assign(Object.assign({},t),{[s]:v(e[s])}),{})}async function f(e){return v(await (0,i.resolveProperties)(e))}t.decodeErrorReason=y,t.rethrowError=function(e){let t=e,s=e;for((null==t?void 0:t.error)!=null&&(t=t.error);(null==t?void 0:t.data)!=null;)s=t,t=t.data;let a="string"==typeof t&&t.length>2?y(t):void 0;if(null!=a&&(e.message=a.message,null!=a.opIndex)){let e=(0,i.hexConcat)([p,i.defaultAbiCoder.encode(["string"],[a.message])]);s.data=e}throw e},t.deepHexlify=v,t.resolveHexlify=f},78375:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.erc4337RuntimeVersion=void 0,t.erc4337RuntimeVersion=s(17803).version},16236:function(e,t,s){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){void 0===a&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);(!n||("get"in n?!t.__esModule:n.writable||n.configurable))&&(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){void 0===a&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(t,"__esModule",{value:!0}),n(s(78375),t),n(s(93465),t)},32252:function(e,t,s){"use strict";s.d(t,{g:function(){return r},i:function(){return n}});var a=s(22555);function n(e){let t=new URL(e).hostname;return t.endsWith(".thirdweb.com")||"localhost"===t||"0.0.0.0"===t}function r(e){return(0,a.OZ$)(e).map(e=>{try{let t=new URL(e);return t.hostname.endsWith(".thirdweb.com")&&(t.pathname="",t.search=""),t.toString()}catch(t){return e}})}},85163:function(e,t,s){"use strict";s.r(t),s.d(t,{SmartWalletConnector:function(){return N}});var a=s(27021),n=s(74064),r=s(6881),i=s(16441),o=s(38197),l=s(84243),d=s(2593),c=s(48088),m=s(97013),u=s(82169),w=s(9279),p=s(19485),h=s(29251),y=s(61744),v=s(32252),f=s(51364),b=s(42009),g=s(16236),A=s(99003),j=s(26212),P=s(18160),C=s(22555);s(54146);var T=s(48764).Buffer;async function k(e,t,s){let a=await r.resolveProperties(e),n={sender:a.sender,nonce:a.nonce,initCodeHash:o.keccak256(a.initCode),callDataHash:o.keccak256(a.callData),callGasLimit:a.callGasLimit,verificationGasLimit:a.verificationGasLimit,preVerificationGas:a.preVerificationGas,maxFeePerGas:a.maxFeePerGas,maxPriorityFeePerGas:a.maxPriorityFeePerGas,paymasterAndDataHash:o.keccak256(a.paymasterAndData)},i=l.$.encode([{components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes32",name:"initCodeHash"},{type:"bytes32",name:"callDataHash"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes32",name:"paymasterAndDataHash"}],name:"hashedUserOp",type:"tuple"}],[{...n}]),d=o.keccak256(i),c=l.$.encode(["bytes32","address","uint256"],[d,t,s]);return o.keccak256(c)}let O=()=>{let e=BigInt(Math.floor(4294967296*Math.random())),t=BigInt(Math.floor(4294967296*Math.random())),s=BigInt(Math.floor(4294967296*Math.random())),a=BigInt(Math.floor(4294967296*Math.random())),n=BigInt(Math.floor(4294967296*Math.random())),r=BigInt(Math.floor(4294967296*Math.random()));return e<<BigInt(160)|t<<BigInt(128)|s<<BigInt(96)|a<<BigInt(64)|n<<BigInt(32)|r},x=()=>{let e=O().toString(16);return e.length%2!=0&&(e="0"+e),e="0x"+e,d.O$.from(i.concat([e,"0x0000000000000000"]))};class I extends n.PaymasterAPI{constructor(e,t,s,a){super(),this.paymasterUrl=e,this.entryPoint=t,this.clientId=s,this.secretKey=a}async getPaymasterAndData(e){let t={"Content-Type":"application/json"};if((0,v.i)(this.paymasterUrl)){if(this.secretKey&&this.clientId)throw Error("Cannot use both secret key and client ID. Please use secretKey for server-side applications and clientId for client-side applications.");this.secretKey?t["x-secret-key"]=this.secretKey:this.clientId&&(t["x-client-id"]=this.clientId,"undefined"!=typeof globalThis&&"APP_BUNDLE_ID"in globalThis&&(t["x-bundle-id"]=globalThis.APP_BUNDLE_ID)),"undefined"!=typeof globalThis&&"TW_AUTH_TOKEN"in globalThis&&"string"==typeof globalThis.TW_AUTH_TOKEN&&(t.authorization=`Bearer ${globalThis.TW_AUTH_TOKEN}`),"undefined"!=typeof globalThis&&"TW_CLI_AUTH_TOKEN"in globalThis&&"string"==typeof globalThis.TW_CLI_AUTH_TOKEN&&(t.authorization=`Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`,t["x-authorize-wallet"]="true")}let s=await fetch(this.paymasterUrl,{method:"POST",headers:t,body:JSON.stringify({jsonrpc:"2.0",id:1,method:"pm_sponsorUserOperation",params:[await r.resolveProperties(e).then(e=>Object.keys(e).map(t=>{let s=e[t];return"string"==typeof s&&s.startsWith("0x")||(s=i.hexValue(s)),[t,s]}).reduce((e,t)=>{let[s,a]=t;return{...e,[s]:a}},{})),{entryPoint:this.entryPoint}]})}),a=await s.json();if(!s.ok){let e=a.error||s.statusText,t=a.code||"UNKNOWN";throw Error(`Paymaster error: ${e}
Status: ${s.status}
Code: ${t}`)}if(a.result){let e=a.result.paymasterAndData||a.result;return e.toString()}throw Error(`Paymaster returned no result from ${this.paymasterUrl}`)}}let S=(e,t,s,a)=>new I(e,t,s,a);class U{constructor(e,t,s,a,n,r,i){this.resolve=e,this.reject=t,this.entryPoint=s,this.sender=a,this.userOpHash=n,this.nonce=r,this.timeout=i,(0,b._)(this,"resolved",!1),this.boundLisener=this.listenerCallback.bind(this)}start(){let e=this.entryPoint.filters.UserOperationEvent(this.userOpHash);setTimeout(async()=>{let t=await this.entryPoint.queryFilter(e,-10);t.length>0?this.listenerCallback(t[0]):this.entryPoint.once(e,this.boundLisener)},100)}stop(){this.entryPoint.off("UserOperationEvent",this.boundLisener)}async listenerCallback(){for(var e=arguments.length,t=Array(e),s=0;s<e;s++)t[s]=arguments[s];let a=arguments[arguments.length-1];if(!a.args){console.error("got event without args",a);return}if(a.args.userOpHash!==this.userOpHash){console.log(`== event with wrong userOpHash: sender/nonce: event.${a.args.sender}@${a.args.nonce.toString()}!= userOp.${this.sender}@${parseInt(this.nonce?.toString())}`);return}let n=await a.getTransactionReceipt();a.args.success||await this.extractFailureReason(n),this.stop(),this.resolve(n),this.resolved=!0}async extractFailureReason(e){e.status=0;let t=await this.entryPoint.queryFilter(this.entryPoint.filters.UserOperationRevertReason(this.userOpHash,this.sender),e.blockHash);if(t[0]){let e=t[0].args.revertReason;e.startsWith("0x08c379a0")&&(e=l.$.decode(["string"],"0x"+e.substring(10)).toString()),this.reject(Error(`UserOp failed with reason: ${e}`))}}}class E extends c.Signer{constructor(e,t,s,a,n){super(),r.defineReadOnly(this,"provider",s),this.config=e,this.originalSigner=t,this.erc4337provider=s,this.httpRpcClient=a,this.smartAccountAPI=n}async sendTransaction(e,t){let s=await r.resolveProperties(e);await this.verifyAllNecessaryFields(s);let a=x(),n=await this.smartAccountAPI.createSignedUserOp({target:s.to||"",data:s.data?.toString()||"0x",value:s.value,gasLimit:s.gasLimit,nonce:a},t),i=await this.erc4337provider.constructUserOpTransactionResponse(n);try{await this.httpRpcClient.sendUserOpToBundler(n)}catch(e){throw this.unwrapError(e)}return i}unwrapError(e){try{let t="Unknown Error";if(e.error)t=`The bundler has failed to include UserOperation in a batch: ${e.error}`;else if(e.body&&"string"==typeof e.body){let s=JSON.parse(e.body),a=e.status||"UNKNOWN",n=s?.code||"UNKNOWN",r=s?.error?.message||s?.error?.data||s?.error||e.reason;if(r?.includes("FailedOp")){let e="",s=r.match(/FailedOp\((.*)\)/);if(s){let t=s[1].split(",");e=`(paymaster address: ${t[1]})`,r=t[2]}t=`The bundler has failed to include UserOperation in a batch: ${r} ${e}`}else t=`RPC error: ${r}
Status: ${a}
Code: ${n}`}let s=Error(t);return s.stack=e.stack,s}catch(e){}return e}async verifyAllNecessaryFields(e){if(!e.to)throw Error("Missing call target");if(!e.data&&!e.value)throw Error("Missing call data or value")}connect(e){throw Error("changing providers is not supported")}async getAddress(){return this.address||(this.address=await this.erc4337provider.getSenderAccountAddress()),this.address}async signMessage(e){let t=await this.smartAccountAPI.checkAccountPhantom();if(t){console.log("Account contract not deployed yet. Deploying account before signing message");let e=await this.sendTransaction({to:await this.getAddress(),data:"0x"});await e.wait()}return await this.originalSigner.signMessage(e)}async signTransaction(e,t){let s=await r.resolveProperties(e);await this.verifyAllNecessaryFields(s);let a=x(),n=await this.smartAccountAPI.createSignedUserOp({target:s.to||"",data:s.data?.toString()||"0x",value:s.value,gasLimit:s.gasLimit,nonce:a},t),i=JSON.stringify((0,g.deepHexlify)(await r.resolveProperties(n)));return i}}class _ extends m.Zk{constructor(e,t,s,a,n,r,i){super({name:"ERC-4337 Custom Network",chainId:e}),this.chainId=e,this.config=t,this.originalSigner=s,this.originalProvider=a,this.httpRpcClient=n,this.entryPoint=r,this.smartAccountAPI=i,this.signer=new E(t,s,this,n,i)}getSigner(){return this.signer}async perform(e,t){if("sendTransaction"===e||"getTransactionReceipt"===e)throw Error("Should not get here. Investigate.");if("estimateGas"===e){let{callGasLimit:e}=await this.smartAccountAPI.encodeUserOpCallDataAndGasLimit({target:t.transaction.to,data:t.transaction.data,value:t.transaction.value,gasLimit:t.transaction.gasLimit});return e}return await this.originalProvider.perform(e,t)}async getTransaction(e){return await super.getTransaction(e)}async getTransactionReceipt(e){let t=await e,s=await this.getSenderAccountAddress();return await new Promise((e,a)=>{new U(e,a,this.entryPoint,s,t).start()})}async getSenderAccountAddress(){return await this.smartAccountAPI.getAccountAddress()}async waitForTransaction(e,t,s){let a=await this.getSenderAccountAddress();return await new Promise((t,n)=>{let r=new U(t,n,this.entryPoint,a,e,void 0,s);r.start()})}async constructUserOpTransactionResponse(e){let t=await r.resolveProperties(e),s=await this.smartAccountAPI.getUserOpHash(t),a=async()=>await new Promise((e,a)=>{new U(e,a,this.entryPoint,t.sender,s,t.nonce).start()});return{hash:s,confirmations:0,from:t.sender,nonce:0,gasLimit:d.O$.from(t.callGasLimit),value:d.O$.from(0),data:i.hexValue(t.callData),chainId:this.chainId,wait:async e=>{let s=await a();return 0!==t.initCode.length&&await this.smartAccountAPI.checkAccountPhantom(),s}}}async detectNetwork(){return this.originalProvider.detectNetwork()}}var F={name:"@thirdweb-dev/wallets",version:"2.3.1",main:"dist/thirdweb-dev-wallets.cjs.js",module:"dist/thirdweb-dev-wallets.esm.js",browser:{"./dist/thirdweb-dev-wallets.esm.js":"./dist/thirdweb-dev-wallets.browser.esm.js"},exports:{".":{module:{browser:"./dist/thirdweb-dev-wallets.browser.esm.js",default:"./dist/thirdweb-dev-wallets.esm.js"},default:"./dist/thirdweb-dev-wallets.cjs.js"},"./evm":{module:{browser:"./evm/dist/thirdweb-dev-wallets-evm.browser.esm.js",default:"./evm/dist/thirdweb-dev-wallets-evm.esm.js"},default:"./evm/dist/thirdweb-dev-wallets-evm.cjs.js"},"./evm/wallets/okx":{module:{browser:"./evm/wallets/okx/dist/thirdweb-dev-wallets-evm-wallets-okx.browser.esm.js",default:"./evm/wallets/okx/dist/thirdweb-dev-wallets-evm-wallets-okx.esm.js"},default:"./evm/wallets/okx/dist/thirdweb-dev-wallets-evm-wallets-okx.cjs.js"},"./evm/wallets/base":{module:{browser:"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.browser.esm.js",default:"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.esm.js"},default:"./evm/wallets/base/dist/thirdweb-dev-wallets-evm-wallets-base.cjs.js"},"./evm/wallets/safe":{module:{browser:"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.browser.esm.js",default:"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.esm.js"},default:"./evm/wallets/safe/dist/thirdweb-dev-wallets-evm-wallets-safe.cjs.js"},"./evm/wallets/async":{module:{browser:"./evm/wallets/async/dist/thirdweb-dev-wallets-evm-wallets-async.browser.esm.js",default:"./evm/wallets/async/dist/thirdweb-dev-wallets-evm-wallets-async.esm.js"},default:"./evm/wallets/async/dist/thirdweb-dev-wallets-evm-wallets-async.cjs.js"},"./evm/wallets/frame":{module:{browser:"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.browser.esm.js",default:"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.esm.js"},default:"./evm/wallets/frame/dist/thirdweb-dev-wallets-evm-wallets-frame.cjs.js"},"./evm/wallets/magic":{module:{browser:"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.browser.esm.js",default:"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.esm.js"},default:"./evm/wallets/magic/dist/thirdweb-dev-wallets-evm-wallets-magic.cjs.js"},"./evm/wallets/rabby":{module:{browser:"./evm/wallets/rabby/dist/thirdweb-dev-wallets-evm-wallets-rabby.browser.esm.js",default:"./evm/wallets/rabby/dist/thirdweb-dev-wallets-evm-wallets-rabby.esm.js"},default:"./evm/wallets/rabby/dist/thirdweb-dev-wallets-evm-wallets-rabby.cjs.js"},"./evm/wallets/trust":{module:{browser:"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.browser.esm.js",default:"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.esm.js"},default:"./evm/wallets/trust/dist/thirdweb-dev-wallets-evm-wallets-trust.cjs.js"},"./evm/wallets/blocto":{module:{browser:"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.browser.esm.js",default:"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.esm.js"},default:"./evm/wallets/blocto/dist/thirdweb-dev-wallets-evm-wallets-blocto.cjs.js"},"./evm/wallets/coin98":{module:{browser:"./evm/wallets/coin98/dist/thirdweb-dev-wallets-evm-wallets-coin98.browser.esm.js",default:"./evm/wallets/coin98/dist/thirdweb-dev-wallets-evm-wallets-coin98.esm.js"},default:"./evm/wallets/coin98/dist/thirdweb-dev-wallets-evm-wallets-coin98.cjs.js"},"./evm/wallets/engine":{module:{browser:"./evm/wallets/engine/dist/thirdweb-dev-wallets-evm-wallets-engine.browser.esm.js",default:"./evm/wallets/engine/dist/thirdweb-dev-wallets-evm-wallets-engine.esm.js"},default:"./evm/wallets/engine/dist/thirdweb-dev-wallets-evm-wallets-engine.cjs.js"},"./evm/wallets/ethers":{module:{browser:"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.browser.esm.js",default:"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.esm.js"},default:"./evm/wallets/ethers/dist/thirdweb-dev-wallets-evm-wallets-ethers.cjs.js"},"./evm/wallets/onekey":{module:{browser:"./evm/wallets/onekey/dist/thirdweb-dev-wallets-evm-wallets-onekey.browser.esm.js",default:"./evm/wallets/onekey/dist/thirdweb-dev-wallets-evm-wallets-onekey.esm.js"},default:"./evm/wallets/onekey/dist/thirdweb-dev-wallets-evm-wallets-onekey.cjs.js"},"./evm/wallets/signer":{module:{browser:"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.browser.esm.js",default:"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.esm.js"},default:"./evm/wallets/signer/dist/thirdweb-dev-wallets-evm-wallets-signer.cjs.js"},"./evm/wallets/zerion":{module:{browser:"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.browser.esm.js",default:"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.esm.js"},default:"./evm/wallets/zerion/dist/thirdweb-dev-wallets-evm-wallets-zerion.cjs.js"},"./evm/wallets/aws-kms":{module:{browser:"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.browser.esm.js",default:"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.esm.js"},default:"./evm/wallets/aws-kms/dist/thirdweb-dev-wallets-evm-wallets-aws-kms.cjs.js"},"./evm/wallets/gcp-kms":{module:{browser:"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.browser.esm.js",default:"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.esm.js"},default:"./evm/wallets/gcp-kms/dist/thirdweb-dev-wallets-evm-wallets-gcp-kms.cjs.js"},"./evm/wallets/phantom":{module:{browser:"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.browser.esm.js",default:"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.esm.js"},default:"./evm/wallets/phantom/dist/thirdweb-dev-wallets-evm-wallets-phantom.cjs.js"},"./evm/wallets/abstract":{module:{browser:"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.browser.esm.js",default:"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.esm.js"},default:"./evm/wallets/abstract/dist/thirdweb-dev-wallets-evm-wallets-abstract.cjs.js"},"./evm/wallets/injected":{module:{browser:"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.browser.esm.js",default:"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.esm.js"},default:"./evm/wallets/injected/dist/thirdweb-dev-wallets-evm-wallets-injected.cjs.js"},"./evm/wallets/metamask":{module:{browser:"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.browser.esm.js",default:"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.esm.js"},default:"./evm/wallets/metamask/dist/thirdweb-dev-wallets-evm-wallets-metamask.cjs.js"},"./evm/wallets/core-wallet":{module:{browser:"./evm/wallets/core-wallet/dist/thirdweb-dev-wallets-evm-wallets-core-wallet.browser.esm.js",default:"./evm/wallets/core-wallet/dist/thirdweb-dev-wallets-evm-wallets-core-wallet.esm.js"},default:"./evm/wallets/core-wallet/dist/thirdweb-dev-wallets-evm-wallets-core-wallet.cjs.js"},"./evm/wallets/private-key":{module:{browser:"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.browser.esm.js",default:"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.esm.js"},default:"./evm/wallets/private-key/dist/thirdweb-dev-wallets-evm-wallets-private-key.cjs.js"},"./evm/connectors/okx":{module:{browser:"./evm/connectors/okx/dist/thirdweb-dev-wallets-evm-connectors-okx.browser.esm.js",default:"./evm/connectors/okx/dist/thirdweb-dev-wallets-evm-connectors-okx.esm.js"},default:"./evm/connectors/okx/dist/thirdweb-dev-wallets-evm-connectors-okx.cjs.js"},"./evm/wallets/local-wallet":{module:{browser:"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.browser.esm.js",default:"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.esm.js"},default:"./evm/wallets/local-wallet/dist/thirdweb-dev-wallets-evm-wallets-local-wallet.cjs.js"},"./evm/wallets/paper-wallet":{module:{browser:"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.browser.esm.js",default:"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.esm.js"},default:"./evm/wallets/paper-wallet/dist/thirdweb-dev-wallets-evm-wallets-paper-wallet.cjs.js"},"./evm/wallets/smart-wallet":{module:{browser:"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.browser.esm.js",default:"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.esm.js"},default:"./evm/wallets/smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-smart-wallet.cjs.js"},"./evm/connectors/safe":{module:{browser:"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.browser.esm.js",default:"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.esm.js"},default:"./evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.cjs.js"},"./evm/connectors/frame":{module:{browser:"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.browser.esm.js",default:"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.esm.js"},default:"./evm/connectors/frame/dist/thirdweb-dev-wallets-evm-connectors-frame.cjs.js"},"./evm/connectors/magic":{module:{browser:"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.browser.esm.js",default:"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.esm.js"},default:"./evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.cjs.js"},"./evm/connectors/paper":{module:{browser:"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js",default:"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.esm.js"},default:"./evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.cjs.js"},"./evm/connectors/rabby":{module:{browser:"./evm/connectors/rabby/dist/thirdweb-dev-wallets-evm-connectors-rabby.browser.esm.js",default:"./evm/connectors/rabby/dist/thirdweb-dev-wallets-evm-connectors-rabby.esm.js"},default:"./evm/connectors/rabby/dist/thirdweb-dev-wallets-evm-connectors-rabby.cjs.js"},"./evm/connectors/trust":{module:{browser:"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.browser.esm.js",default:"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.esm.js"},default:"./evm/connectors/trust/dist/thirdweb-dev-wallets-evm-connectors-trust.cjs.js"},"./evm/wallets/rainbow-wallet":{module:{browser:"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.browser.esm.js",default:"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.esm.js"},default:"./evm/wallets/rainbow-wallet/dist/thirdweb-dev-wallets-evm-wallets-rainbow-wallet.cjs.js"},"./evm/wallets/wallet-connect":{module:{browser:"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.browser.esm.js",default:"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.esm.js"},default:"./evm/wallets/wallet-connect/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect.cjs.js"},"./evm/connectors/blocto":{module:{browser:"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.browser.esm.js",default:"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.esm.js"},default:"./evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.cjs.js"},"./evm/connectors/coin98":{module:{browser:"./evm/connectors/coin98/dist/thirdweb-dev-wallets-evm-connectors-coin98.browser.esm.js",default:"./evm/connectors/coin98/dist/thirdweb-dev-wallets-evm-connectors-coin98.esm.js"},default:"./evm/connectors/coin98/dist/thirdweb-dev-wallets-evm-connectors-coin98.cjs.js"},"./evm/connectors/onekey":{module:{browser:"./evm/connectors/onekey/dist/thirdweb-dev-wallets-evm-connectors-onekey.browser.esm.js",default:"./evm/connectors/onekey/dist/thirdweb-dev-wallets-evm-connectors-onekey.esm.js"},default:"./evm/connectors/onekey/dist/thirdweb-dev-wallets-evm-connectors-onekey.cjs.js"},"./evm/connectors/signer":{module:{browser:"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.browser.esm.js",default:"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.esm.js"},default:"./evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.cjs.js"},"./evm/connectors/zerion":{module:{browser:"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.browser.esm.js",default:"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.esm.js"},default:"./evm/connectors/zerion/dist/thirdweb-dev-wallets-evm-connectors-zerion.cjs.js"},"./evm/wallets/coinbase-wallet":{module:{browser:"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.browser.esm.js",default:"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.esm.js"},default:"./evm/wallets/coinbase-wallet/dist/thirdweb-dev-wallets-evm-wallets-coinbase-wallet.cjs.js"},"./evm/wallets/embedded-wallet":{module:{browser:"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.browser.esm.js",default:"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.esm.js"},default:"./evm/wallets/embedded-wallet/dist/thirdweb-dev-wallets-evm-wallets-embedded-wallet.cjs.js"},"./evm/connectors/phantom":{module:{browser:"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.browser.esm.js",default:"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.esm.js"},default:"./evm/connectors/phantom/dist/thirdweb-dev-wallets-evm-connectors-phantom.cjs.js"},"./evm/connectors/rainbow":{module:{browser:"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.browser.esm.js",default:"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.esm.js"},default:"./evm/connectors/rainbow/dist/thirdweb-dev-wallets-evm-connectors-rainbow.cjs.js"},"./evm/connectors/injected":{module:{browser:"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js",default:"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.esm.js"},default:"./evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.cjs.js"},"./evm/connectors/metamask":{module:{browser:"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.browser.esm.js",default:"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.esm.js"},default:"./evm/connectors/metamask/dist/thirdweb-dev-wallets-evm-connectors-metamask.cjs.js"},"./evm/wallets/local-wallet-node":{module:{browser:"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.browser.esm.js",default:"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.esm.js"},default:"./evm/wallets/local-wallet-node/dist/thirdweb-dev-wallets-evm-wallets-local-wallet-node.cjs.js"},"./evm/wallets/wallet-connect-v1":{module:{browser:"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.browser.esm.js",default:"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.esm.js"},default:"./evm/wallets/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-wallets-wallet-connect-v1.cjs.js"},"./evm/wallets/crypto-defi-wallet":{module:{browser:"./evm/wallets/crypto-defi-wallet/dist/thirdweb-dev-wallets-evm-wallets-crypto-defi-wallet.browser.esm.js",default:"./evm/wallets/crypto-defi-wallet/dist/thirdweb-dev-wallets-evm-wallets-crypto-defi-wallet.esm.js"},default:"./evm/wallets/crypto-defi-wallet/dist/thirdweb-dev-wallets-evm-wallets-crypto-defi-wallet.cjs.js"},"./evm/wallets/aws-secrets-manager":{module:{browser:"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.browser.esm.js",default:"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.esm.js"},default:"./evm/wallets/aws-secrets-manager/dist/thirdweb-dev-wallets-evm-wallets-aws-secrets-manager.cjs.js"},"./evm/connectors/core-wallet":{module:{browser:"./evm/connectors/core-wallet/dist/thirdweb-dev-wallets-evm-connectors-core-wallet.browser.esm.js",default:"./evm/connectors/core-wallet/dist/thirdweb-dev-wallets-evm-connectors-core-wallet.esm.js"},default:"./evm/connectors/core-wallet/dist/thirdweb-dev-wallets-evm-connectors-core-wallet.cjs.js"},"./evm/connectors/local-wallet":{module:{browser:"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.browser.esm.js",default:"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.esm.js"},default:"./evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.cjs.js"},"./evm/connectors/smart-wallet":{module:{browser:"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.browser.esm.js",default:"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.esm.js"},default:"./evm/connectors/smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-smart-wallet.cjs.js"},"./evm/connectors/wallet-connect":{module:{browser:"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.browser.esm.js",default:"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.esm.js"},default:"./evm/connectors/wallet-connect/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect.cjs.js"},"./evm/connectors/coinbase-wallet":{module:{browser:"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js",default:"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.esm.js"},default:"./evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.cjs.js"},"./evm/connectors/embedded-wallet":{module:{browser:"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js",default:"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.esm.js"},default:"./evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.cjs.js"},"./evm/wallets/token-bound-smart-wallet":{module:{browser:"./evm/wallets/token-bound-smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-token-bound-smart-wallet.browser.esm.js",default:"./evm/wallets/token-bound-smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-token-bound-smart-wallet.esm.js"},default:"./evm/wallets/token-bound-smart-wallet/dist/thirdweb-dev-wallets-evm-wallets-token-bound-smart-wallet.cjs.js"},"./evm/connectors/wallet-connect-v1":{module:{browser:"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.browser.esm.js",default:"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.esm.js"},default:"./evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.cjs.js"},"./evm/connectors/crypto-defi-wallet":{module:{browser:"./evm/connectors/crypto-defi-wallet/dist/thirdweb-dev-wallets-evm-connectors-crypto-defi-wallet.browser.esm.js",default:"./evm/connectors/crypto-defi-wallet/dist/thirdweb-dev-wallets-evm-connectors-crypto-defi-wallet.esm.js"},default:"./evm/connectors/crypto-defi-wallet/dist/thirdweb-dev-wallets-evm-connectors-crypto-defi-wallet.cjs.js"},"./evm/connectors/token-bound-smart-wallet":{module:{browser:"./evm/connectors/token-bound-smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-token-bound-smart-wallet.browser.esm.js",default:"./evm/connectors/token-bound-smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-token-bound-smart-wallet.esm.js"},default:"./evm/connectors/token-bound-smart-wallet/dist/thirdweb-dev-wallets-evm-connectors-token-bound-smart-wallet.cjs.js"},"./evm/connectors/embedded-wallet/implementations":{module:{browser:"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.browser.esm.js",default:"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.esm.js"},default:"./evm/connectors/embedded-wallet/implementations/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet-implementations.cjs.js"},"./package.json":"./package.json"},types:"dist/thirdweb-dev-wallets.cjs.d.ts",repository:"https://github.com/thirdweb-dev/js/tree/main/packages/wallets",license:"Apache-2.0",bugs:{url:"https://github.com/thirdweb-dev/js/issues"},author:"thirdweb eng <eng@thirdweb.com>",files:["dist/","evm/"],preconstruct:{entrypoints:["index.ts","evm/index.ts","evm/connectors/*/index.ts","evm/connectors/embedded-wallet/implementations/index.ts","evm/wallets/**"],exports:{envConditions:["browser"]}},sideEffects:!1,dependencies:{"@account-abstraction/contracts":"^0.5.0","@account-abstraction/sdk":"^0.5.0","@account-abstraction/utils":"^0.5.0","@blocto/sdk":"^0.5.4","@coinbase/wallet-sdk":"^3.7.1","@google-cloud/kms":"3.0.1","@magic-ext/connect":"^6.7.2","@magic-ext/oauth":"^7.6.2","@magic-sdk/provider":"^13.6.2","@metamask/eth-sig-util":"^4.0.0","@paperxyz/embedded-wallet-service-sdk":"^1.2.5","@paperxyz/sdk-common-utilities":"^0.1.0","@safe-global/safe-core-sdk":"^3.3.4","@safe-global/safe-ethers-adapters":"0.1.0-alpha.17","@safe-global/safe-ethers-lib":"^1.9.4","@thirdweb-dev/chains":"workspace:*","@thirdweb-dev/crypto":"workspace:*","@thirdweb-dev/contracts-js":"workspace:*","@thirdweb-dev/sdk":"workspace:*","@walletconnect/core":"^2.9.1","@walletconnect/ethereum-provider":"^2.9.1","@walletconnect/jsonrpc-utils":"^1.0.8","@walletconnect/modal":"^2.6.1","@walletconnect/types":"^2.9.1","@walletconnect/utils":"^2.10.2","@walletconnect/web3wallet":"^1.8.7","asn1.js":"5.4.1","bn.js":"5.2.0",buffer:"^6.0.3","eth-provider":"^0.13.6","ethereumjs-util":"^7.1.3",eventemitter3:"^5.0.1","key-encoder":"2.0.3","magic-sdk":"^13.6.2","web3-core":"1.5.2"},peerDependencies:{"@aws-sdk/client-secrets-manager":"^3.256.0","@noble/ed25519":"^1.7.1",bs58:"^5.0.0",ethers:"^5.7.2","ethers-aws-kms-signer":"^1.3.2",tweetnacl:"^1.0.3"},peerDependenciesMeta:{tweetnacl:{optional:!0},"@aws-sdk/client-secrets-manager":{optional:!0},"ethers-aws-kms-signer":{optional:!0},"@noble/ed25519":{optional:!0},bs58:{optional:!0},ethers:{optional:!0}},devDependencies:{"@aws-sdk/client-secrets-manager":"^3.378.0","@babel/plugin-proposal-class-properties":"7.18.6","@babel/plugin-transform-flow-strip-types":"^7.22.5","@babel/plugin-transform-private-methods":"7.22.5","@noble/ed25519":"^1.7.1","@preconstruct/cli":"2.7.0","@thirdweb-dev/tsconfig":"workspace:*","@types/bn.js":"^5.1.1",abitype:"^0.2.5","babel-plugin-transform-inline-environment-variables":"^0.4.4",bs58:"^5.0.0","cross-env":"^7.0.3","eslint-config-thirdweb":"workspace:*","eslint-plugin-better-tree-shaking":"0.0.4","eslint-plugin-tsdoc":"^0.2.16","ethereum-provider":"^0.7.7",ethers:"^5.7.2","ethers-aws-kms-signer":"^1.3.2",rimraf:"^3.0.2",tweetnacl:"^1.0.3",typescript:"^5.1.6","typedoc-gen":"workspace:*"},scripts:{format:"prettier --write 'src/**/*'",lint:"eslint src/ && bunx publint --strict --level warning",fix:"eslint src/ --fix",clean:"rm -rf dist/",build:"tsc && cross-env THIRDWEB_EWS_SDK_VERSION=$npm_package_version preconstruct build","preconstruct:fix":"preconstruct fix",push:"yalc push",typedoc:"node scripts/typedoc.mjs"},engines:{node:">=18"}};class D{constructor(e,t,s,a,n){this.bundlerUrl=e,this.entryPointAddress=t,this.chainId=s;let r={};if((0,v.i)(this.bundlerUrl)){let e="undefined"!=typeof globalThis&&"APP_BUNDLE_ID"in globalThis?globalThis.APP_BUNDLE_ID:void 0;n?r["x-secret-key"]=n:a&&(r["x-client-id"]=a,e&&(r["x-bundle-id"]=e)),"undefined"!=typeof globalThis&&"TW_AUTH_TOKEN"in globalThis&&"string"==typeof globalThis.TW_AUTH_TOKEN&&(r.authorization=`Bearer ${globalThis.TW_AUTH_TOKEN}`),"undefined"!=typeof globalThis&&"TW_CLI_AUTH_TOKEN"in globalThis&&"string"==typeof globalThis.TW_CLI_AUTH_TOKEN&&(r.authorization=`Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`,r["x-authorize-wallet"]="true"),r["x-sdk-version"]=F.version,r["x-sdk-name"]=F.name,r["x-sdk-platform"]=e?"react-native":void 0!==window.bridge?"webGL":"browser"}this.userOpJsonRpcProvider=new u.r({url:this.bundlerUrl,headers:r},{name:"Connected bundler network",chainId:s}),this.initializing=this.validateChainId()}async validateChainId(){let e=await this.userOpJsonRpcProvider.send("eth_chainId",[]),t=parseInt(e);if(t!==this.chainId)throw Error(`bundler ${this.bundlerUrl} is on chainId ${t}, but provider is on chainId ${this.chainId}`)}async sendUserOpToBundler(e){await this.initializing;let t=(0,g.deepHexlify)(await r.resolveProperties(e)),s=[t,this.entryPointAddress];return await this.printUserOperation("eth_sendUserOperation",s),await this.userOpJsonRpcProvider.send("eth_sendUserOperation",[t,this.entryPointAddress])}async estimateUserOpGas(e){await this.initializing;let t=(0,g.deepHexlify)(await r.resolveProperties(e)),s=[t,this.entryPointAddress];return await this.printUserOperation("eth_estimateUserOperationGas",s),await this.userOpJsonRpcProvider.send("eth_estimateUserOperationGas",[t,this.entryPointAddress])}async printUserOperation(e,t){}}class G{constructor(e){(0,b._)(this,"isPhantom",!0),this.provider=e.provider,this.overheads=e.overheads,this.entryPointAddress=e.entryPointAddress,this.accountAddress=e.accountAddress,this.paymasterAPI=e.paymasterAPI,this.entryPointView=f.EntryPoint__factory.connect(e.entryPointAddress,e.provider).connect(w.d)}async checkAccountPhantom(){if(!this.isPhantom)return this.isPhantom;let e=await this.provider.getCode(this.getAccountAddress());return e.length>2&&(this.isPhantom=!1),this.isPhantom}async getInitCode(){return await this.checkAccountPhantom()?await this.getAccountInitCode():"0x"}async getVerificationGasLimit(){return 1e5}async getPreVerificationGas(e){let t=await r.resolveProperties(e);return(0,n.calcPreVerificationGas)(t,this.overheads)}packUserOp(e){return(0,g.packUserOp)(e,!1)}async encodeUserOpCallDataAndGasLimit(e,t){let s;let a=R(e.value)??d.O$.from(0),n=t?e.data:await this.prepareExecute(e.target,a,e.data).then(e=>e.encode()),r=await this.checkAccountPhantom();if(r){if(t){let e=await Promise.all(t.targets.map((e,s)=>this.provider.estimateGas({from:this.getAccountAddress(),to:t.targets[s],data:t.data[s],value:t.values[s]})));s=e.reduce((e,t)=>e.add(t),d.O$.from(0))}else s=await this.provider.estimateGas({from:this.getAccountAddress(),to:e.target,data:e.data,value:e.value});(s=s.mul(120).div(100)).lt(3e4)&&(s=d.O$.from(5e5))}else s=R(e.gasLimit)??await this.provider.estimateGas({from:this.entryPointAddress,to:this.getAccountAddress(),data:n,value:e.value});return{callData:n,callGasLimit:s}}async getUserOpHash(e){let t=await this.provider.getNetwork().then(e=>e.chainId);return k(e,this.entryPointAddress,t)}async getAccountAddress(){return this.senderAddress||(this.accountAddress?this.senderAddress=this.accountAddress:this.senderAddress=await this.getCounterFactualAddress()),this.senderAddress}async estimateCreationGas(e){if(!e||"0x"===e)return 0;let t=e.substring(0,42),s="0x"+e.substring(42);return await this.provider.estimateGas({to:t,data:s})}async createUnsignedUserOp(e,t){let s;let{callData:a,callGasLimit:o}=await this.encodeUserOpCallDataAndGasLimit(e,t),l=await this.getInitCode(),c=await this.estimateCreationGas(l),m=d.O$.from(await this.getVerificationGasLimit()).add(c),{maxFeePerGas:u,maxPriorityFeePerGas:w}=e;if(!u||!w){let e=await (0,j.Z)(this.provider);if(w||(w=e.maxPriorityFeePerGas??void 0),!u){u=e.maxFeePerGas??void 0,w=e.maxPriorityFeePerGas??void 0;let t=await this.provider.getNetwork(),s=t.chainId;(s===C.Lll.chainId||s===C.M8s.chainId||s===C.m3x.chainId)&&(w=u)}}let p={sender:this.getAccountAddress(),nonce:e.nonce??this.getNonce(),initCode:l,callData:a,callGasLimit:o,verificationGasLimit:m,maxFeePerGas:u,maxPriorityFeePerGas:w,paymasterAndData:"0x"},h=p;if(this.paymasterAPI){try{await r.resolveProperties(h)}catch(e){}let e={sender:h.sender,nonce:h.nonce,initCode:h.initCode,callData:h.callData,callGasLimit:h.callGasLimit,verificationGasLimit:h.verificationGasLimit,maxFeePerGas:h.maxFeePerGas,maxPriorityFeePerGas:h.maxPriorityFeePerGas,paymasterAndData:"0x0101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000001010101010100000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101",signature:i.hexlify(T.alloc(65,1))};h=await r.resolveProperties(e);let t=(0,n.calcPreVerificationGas)(h);h.preVerificationGas=t,"0x"===(s=await this.paymasterAPI.getPaymasterAndData(h))&&(s=void 0)}if(s)return h.paymasterAndData=s,{...h,signature:""};{let e={...h,paymasterAndData:"0x"};return e.preVerificationGas=await this.getPreVerificationGas(e),{...e,signature:""}}}async signUserOp(e){let t=await this.getUserOpHash(e),s=await this.signUserOpHash(t);return{...e,signature:s}}async createSignedUserOp(e,t){return await this.signUserOp(await this.createUnsignedUserOp(e,t))}async getUserOpReceipt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3e4,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2e3,a=Date.now()+t;for(;Date.now()<a;){let t=await this.entryPointView.queryFilter(this.entryPointView.filters.UserOperationEvent(e));if(t[0])return t[0].transactionHash;await new Promise(e=>setTimeout(e,s))}return null}}function R(e){return e&&""!==e?d.O$.from(e.toString()):null}class L extends G{constructor(e,t){super({...e,provider:t}),this.params=e,this.sdk=P.T.fromPrivateKey(P.L,e.chain,{clientId:e.clientId,secretKey:e.secretKey})}async getChainId(){return await this.provider.getNetwork().then(e=>e.chainId)}async getAccountContract(){return this.accountContract||(this.params.accountInfo?.abi?this.accountContract=await this.sdk.getContract(await this.getAccountAddress(),this.params.accountInfo.abi):this.accountContract=await this.sdk.getContract(await this.getAccountAddress(),A.A)),this.accountContract}async getAccountInitCode(){let e=await this.getFactoryContract();console.log("Deploying smart wallet via factory");let t=await this.params.localSigner.getAddress(),s=await this.params.factoryInfo.createAccount(e,t);try{console.log("Cost to deploy smart wallet: ",(await s.estimateGasCost()).ether,"ETH")}catch(e){console.error("Cost to deploy smart wallet: unknown",e)}return i.hexConcat([e.getAddress(),s.encode()])}async getFactoryContract(){return this.factoryContract||(this.params.factoryInfo?.abi?this.factoryContract=await this.sdk.getContract(this.params.factoryAddress,this.params.factoryInfo.abi):this.factoryContract=await this.sdk.getContract(this.params.factoryAddress)),this.factoryContract}async getCounterFactualAddress(){if(this.params.accountAddress)return this.params.accountAddress;let e=await this.getFactoryContract(),t=await this.params.localSigner.getAddress();return this.params.factoryInfo.getAccountAddress(e,t)}async getNonce(){if(await this.checkAccountPhantom())return d.O$.from(0);let e=await this.getAccountContract();return this.params.accountInfo.getNonce(e)}async prepareExecute(e,t,s){let a=await this.getAccountContract();return this.params.accountInfo.execute(a,e,t,s)}async prepareExecuteBatch(e,t,s){let a=await this.getAccountContract();return a.prepare("executeBatch",[e,t,s])}async signUserOpHash(e){return await this.params.localSigner.signMessage(i.arrayify(e))}async isAcountDeployed(){return!await this.checkAccountPhantom()}}class N extends a.C{constructor(e){super(),this.config=e}async initialize(e){let t=this.config,s=(0,j.b2)(t.chain,{clientId:t.clientId,secretKey:t.secretKey});this.chainId=(await s.getNetwork()).chainId;let a=this.config.bundlerUrl||`https://${this.chainId}.bundler.thirdweb.com`,n=this.config.paymasterUrl||`https://${this.chainId}.bundler.thirdweb.com`,r=t.entryPointAddress||A.E,i=await e.personalWallet.getSigner(),o={chain:t.chain,localSigner:i,entryPointAddress:r,bundlerUrl:a,paymasterAPI:this.config.gasless?this.config.paymasterAPI?this.config.paymasterAPI:S(n,r,this.config.clientId,this.config.secretKey):void 0,factoryAddress:t.factoryAddress,accountAddress:e.accountAddress,factoryInfo:t.factoryInfo||this.defaultFactoryInfo(),accountInfo:t.accountInfo||this.defaultAccountInfo(),clientId:t.clientId,secretKey:t.secretKey};this.personalWallet=e.personalWallet;let l=new L(o,s);this.aaProvider=function(e,t,s,a){let n=f.EntryPoint__factory.connect(e.entryPointAddress,s),r=new D(e.bundlerUrl,e.entryPointAddress,a,e.clientId,e.secretKey);return new _(a,e,e.localSigner,s,r,n,t)}(o,l,s,this.chainId),this.accountApi=l}async connect(e){return await this.initialize(e),await this.getAddress()}getProvider(){if(!this.aaProvider)throw Error("Personal wallet not connected");return Promise.resolve(this.aaProvider)}async getSigner(){if(!this.aaProvider)throw Error("Personal wallet not connected");return Promise.resolve(this.aaProvider.getSigner())}async getAddress(){let e=await this.getSigner();return e.getAddress()}async isConnected(){try{let e=await this.getAddress();return!!e}catch(e){return!1}}async disconnect(){this.personalWallet=void 0,this.aaProvider=void 0}async switchChain(e){let t=await this.getProvider(),s=(await t.getNetwork()).chainId;if(s!==e)throw Error("Not supported.")}setupListeners(){return Promise.resolve()}updateChains(e){}async hasPermissionToExecute(e){let t=await this.getAccountContract(),s=await this.getSigner(),a=await s.getAddress(),n=(await t.account.getAllSigners()).filter(e=>p.getAddress(e.signer)===p.getAddress(a))[0]?.permissions;return!!n&&n.approvedCallTargets.includes(e.getTarget())}async send(e){let t=await this.getSigner();return t.sendTransaction({to:e.getTarget(),data:e.encode(),value:await e.getValue()})}async execute(e){let t=await this.send(e),s=await t.wait();return{receipt:s}}async sendBatch(e){if(!this.accountApi)throw Error("Personal wallet not connected");let t=await this.getSigner(),{tx:s,batchData:a}=await this.prepareBatchTx(e);return await t.sendTransaction({to:await t.getAddress(),data:s.encode(),value:0},a)}async executeBatch(e){let t=await this.sendBatch(e),s=await t.wait();return{receipt:s}}async sendRaw(e){if(!this.accountApi)throw Error("Personal wallet not connected");let t=await this.getSigner();return t.sendTransaction(e)}async executeRaw(e){let t=await this.sendRaw(e),s=await t.wait();return{receipt:s}}async sendBatchRaw(e){if(!this.accountApi)throw Error("Personal wallet not connected");let t=await this.getSigner(),s=await this.prepareBatchRaw(e);return t.sendTransaction({to:await t.getAddress(),data:s.tx.encode(),value:0},s.batchData)}async executeBatchRaw(e){let t=await this.sendBatchRaw(e),s=await t.wait();return{receipt:s}}async estimate(e){if(!this.accountApi)throw Error("Personal wallet not connected");return this.estimateTx({target:e.getTarget(),data:e.encode(),value:await e.getValue()})}async estimateRaw(e){if(!this.accountApi)throw Error("Personal wallet not connected");let t=await r.resolveProperties(e);return this.estimateTx({target:t.to||g.AddressZero,data:t.data?.toString()||"",value:t.value||d.O$.from(0)})}async estimateBatch(e){if(!this.accountApi)throw Error("Personal wallet not connected");let{tx:t,batchData:s}=await this.prepareBatchTx(e);return this.estimateTx({target:t.getTarget(),data:t.encode(),value:await t.getValue()},s)}async estimateBatchRaw(e){if(!this.accountApi)throw Error("Personal wallet not connected");let{tx:t,batchData:s}=await this.prepareBatchRaw(e);return this.estimateTx({target:t.getTarget(),data:t.encode(),value:await t.getValue()},s)}async deploy(){if(!this.accountApi)throw Error("Personal wallet not connected");let e=await this.getSigner(),t=await e.sendTransaction({to:await e.getAddress(),data:"0x"},{targets:[],data:[],values:[]}),s=await t.wait();return{receipt:s}}async isDeployed(){if(!this.accountApi)throw Error("Personal wallet not connected");return await this.accountApi.isAcountDeployed()}async deployIfNeeded(){let e=await this.isDeployed();e||await this.deploy()}async grantPermissions(e,t){await this.deployIfNeeded();let s=await this.getAccountContract();return s.account.grantPermissions(e,t)}async revokePermissions(e){await this.deployIfNeeded();let t=await this.getAccountContract();return t.account.revokeAccess(e)}async addAdmin(e){await this.deployIfNeeded();let t=await this.getAccountContract();return t.account.grantAdminPermissions(e)}async removeAdmin(e){await this.deployIfNeeded();let t=await this.getAccountContract();return t.account.revokeAdminPermissions(e)}async getAllActiveSigners(){let e=await this.isDeployed();if(e){let e=await this.getAccountContract();return e.account.getAllAdminsAndSigners()}{let e=await this.personalWallet?.getSigner();if(!e)throw Error("Personal wallet not connected");return[{isAdmin:!0,signer:await e.getAddress(),permissions:{startDate:new Date(0),expirationDate:new Date(0),nativeTokenLimitPerTransaction:d.O$.from(0),approvedCallTargets:[]}}]}}async getAccountContract(){let e=await this.isDeployed();if(!e)throw Error("Account contract is not deployed yet. You can deploy it manually using SmartWallet.deploy(), or by executing a transaction from this wallet.");let t=P.T.fromSigner(await this.getSigner(),this.config.chain,{clientId:this.config.clientId,secretKey:this.config.secretKey});return this.config.accountInfo?.abi?t.getContract(await this.getAddress(),this.config.accountInfo.abi):t.getContract(await this.getAddress())}async getFactoryContract(){let e=P.T.fromSigner(await this.getSigner(),this.config.chain,{clientId:this.config.clientId,secretKey:this.config.secretKey});return this.config.factoryInfo?.abi?e.getContract(this.config.factoryAddress,this.config.factoryInfo.abi):e.getContract(this.config.factoryAddress)}defaultFactoryInfo(){return{createAccount:async(e,t)=>e.prepare("createAccount",[t,h.Y0("")]),getAccountAddress:async(e,t)=>await e.call("getAddress",[t,h.Y0("")])}}defaultAccountInfo(){return{execute:async(e,t,s,a)=>e.prepare("execute",[t,s,a]),getNonce:async e=>e.call("getNonce",[])}}async estimateTx(e,t){if(!this.accountApi)throw Error("Personal wallet not connected");let s=d.O$.from(0),[a,n]=await Promise.all([this.getProvider(),this.isDeployed()]);n||(s=await this.estimateDeploymentGasLimit());let[{callGasLimit:r},i]=await Promise.all([this.accountApi.encodeUserOpCallDataAndGasLimit(e,t),(0,j._)(a)]),o=r.mul(i),l=s.mul(i),c=l.add(o);return{ether:y.formatEther(c),wei:c,details:{deployGasLimit:s,transactionGasLimit:r,gasPrice:i,transactionCost:o,deployCost:l,totalCost:c}}}async estimateDeploymentGasLimit(){if(!this.accountApi)throw Error("Personal wallet not connected");let e=await this.accountApi.getInitCode(),[t,s]=await Promise.all([this.accountApi.estimateCreationGas(e),this.accountApi.getVerificationGasLimit()]);return d.O$.from(s).add(t)}async prepareBatchRaw(e){if(!this.accountApi)throw Error("Personal wallet not connected");let t=await Promise.all(e.map(e=>r.resolveProperties(e))),s=t.map(e=>e.to||g.AddressZero),a=t.map(e=>e.data||"0x"),n=t.map(e=>e.value||d.O$.from(0));return{tx:await this.accountApi.prepareExecuteBatch(s,n,a),batchData:{targets:s,data:a,values:n}}}async prepareBatchTx(e){if(!this.accountApi)throw Error("Personal wallet not connected");let t=e.map(e=>e.getTarget()),s=e.map(e=>e.encode()),a=await Promise.all(e.map(e=>e.getValue()));return{tx:await this.accountApi.prepareExecuteBatch(t,a,s),batchData:{targets:t,data:s,values:a}}}}},11227:function(e,t,s){let a;var n=s(34155);t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;let s="color: "+this.color;t.splice(1,0,s,"color: inherit");let a=0,n=0;t[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(a++,"%c"===e&&(n=a))}),t.splice(n,0,s)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&void 0!==n&&"env"in n&&(e=n.env.DEBUG),e},t.useColors=function(){return"undefined"!=typeof window&&!!window.process&&("renderer"===window.process.type||!!window.process.__nwjs)||!("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(a=!1,()=>{a||(a=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=s(82447)(t);let{formatters:r}=e.exports;r.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},82447:function(e,t,s){e.exports=function(e){function t(e){let s,n,r;let i=null;function o(...e){if(!o.enabled)return;let a=o,n=Number(new Date),r=n-(s||n);a.diff=r,a.prev=s,a.curr=n,s=n,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let i=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(s,n)=>{if("%%"===s)return"%";i++;let r=t.formatters[n];if("function"==typeof r){let t=e[i];s=r.call(a,t),e.splice(i,1),i--}return s}),t.formatArgs.call(a,e);let l=a.log||t.log;l.apply(a,e)}return o.namespace=e,o.useColors=t.useColors(),o.color=t.selectColor(e),o.extend=a,o.destroy=t.destroy,Object.defineProperty(o,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==i?i:(n!==t.namespaces&&(n=t.namespaces,r=t.enabled(e)),r),set:e=>{i=e}}),"function"==typeof t.init&&t.init(o),o}function a(e,s){let a=t(this.namespace+(void 0===s?":":s)+e);return a.log=this.log,a}function n(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){let e=[...t.names.map(n),...t.skips.map(n).map(e=>"-"+e)].join(",");return t.enable(""),e},t.enable=function(e){let s;t.save(e),t.namespaces=e,t.names=[],t.skips=[];let a=("string"==typeof e?e:"").split(/[\s,]+/),n=a.length;for(s=0;s<n;s++)a[s]&&("-"===(e=a[s].replace(/\*/g,".*?"))[0]?t.skips.push(RegExp("^"+e.slice(1)+"$")):t.names.push(RegExp("^"+e+"$")))},t.enabled=function(e){let s,a;if("*"===e[e.length-1])return!0;for(s=0,a=t.skips.length;s<a;s++)if(t.skips[s].test(e))return!1;for(s=0,a=t.names.length;s<a;s++)if(t.names[s].test(e))return!0;return!1},t.humanize=s(57824),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach(s=>{t[s]=e[s]}),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let s=0;for(let t=0;t<e.length;t++)s=(s<<5)-s+e.charCodeAt(t)|0;return t.colors[Math.abs(s)%t.colors.length]},t.enable(t.load()),t}},57824:function(e){function t(e,t,s,a){return Math.round(e/s)+" "+a+(t>=1.5*s?"s":"")}e.exports=function(e,s){s=s||{};var a,n,r=typeof e;if("string"===r&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var s=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*s;case"weeks":case"week":case"w":return 6048e5*s;case"days":case"day":case"d":return 864e5*s;case"hours":case"hour":case"hrs":case"hr":case"h":return 36e5*s;case"minutes":case"minute":case"mins":case"min":case"m":return 6e4*s;case"seconds":case"second":case"secs":case"sec":case"s":return 1e3*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}}}(e);if("number"===r&&isFinite(e))return s.long?(a=Math.abs(e))>=864e5?t(e,a,864e5,"day"):a>=36e5?t(e,a,36e5,"hour"):a>=6e4?t(e,a,6e4,"minute"):a>=1e3?t(e,a,1e3,"second"):e+" ms":(n=Math.abs(e))>=864e5?Math.round(e/864e5)+"d":n>=36e5?Math.round(e/36e5)+"h":n>=6e4?Math.round(e/6e4)+"m":n>=1e3?Math.round(e/1e3)+"s":e+"ms";throw Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},79154:function(e){"use strict";e.exports=JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"IEntryPoint","sourceName":"contracts/interfaces/IEntryPoint.sol","abi":[{"inputs":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bool","name":"targetSuccess","type":"bool"},{"internalType":"bytes","name":"targetResult","type":"bytes"}],"name":"ExecutionResult","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"}],"name":"ValidationResult","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"},{"components":[{"internalType":"address","name":"aggregator","type":"address"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"}],"internalType":"struct IEntryPoint.AggregatorStakeInfo","name":"aggregatorInfo","type":"tuple"}],"name":"ValidationResultWithAggregation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"op","type":"tuple"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"targetCallData","type":"bytes"}],"name":"simulateHandleOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"simulateValidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}}')},17803:function(e){"use strict";e.exports={version:"0.5.0"}}}]);